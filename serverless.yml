service: aws-node-express-api-project
frameworkVersion: "3"

provider:
  name: aws
  region: us-east-1
  stage: ${opt:stage, 'local'}
  memorySize: 256
  runtime: nodejs18.x
  environment:
    #postgresql
    POSTGRESQL_HOST: ${self:custom.POSTGRESQL.HOST}
    POSTGRESQL_PORT: ${self:custom.POSTGRESQL.PORT}
    #common
    DB_NAME: ${self:custom.DB_NAME}
    USERNAME: ${self:custom.USERNAME}
    PASSWORD: ${self:custom.PASSWORD}

package:
  individually: true 
  excludeDevDependencies: true
  patterns:
    - '!node_modules/**'
    - '!.git/**'
    - '!.serverless/**'
    - '!yarn.lock'
    - '!package-lock.json'

plugins:
  - serverless-localstack
  - serverless-offline
  - serverless-mocha-plugin
  - serverless-plugin-typescript

custom:
  localstack:
    stages:
      - local
    # desabilitar o localstack quando fizer deploy
    autostart: false
  serverless-offline:
    useChildProcesses: true
  DB_NAME: graphql
  USERNAME: master
  PASSWORD: password
  POSTGRESQL:
    HOST:
      Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Address]
    PORT:
      Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Port]

functions:
  graphql:
    handler: src/server.handler
    events:
      - http:
          path: graphql
          method: post
          cors: true
      - http:
          path: graphql
          method: get
          cors: true


